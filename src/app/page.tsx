import Header from './components/Header';
import Footer from './components/Footer';
import LoadingLink from './components/LoadingLink';
import ProjectCard from './components/ProjectCard';
import { useSotuteData } from './hooks/useSotuteData';
import Image from 'next/image';

export default function Home() {
  return (
    <>
      <Header />
      
      {/* Hero Section v·ªõi Video Intro */}
      <section className="relative bg-gradient-to-r from-green-600 to-green-800 min-h-screen flex items-center">
        <div className="absolute inset-0 bg-black opacity-20"></div>
        <div className="container-padding relative z-10">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="text-white">
              <h1 className="text-5xl lg:text-6xl font-bold mb-6">
                Ch∆∞∆°ng tr√¨nh <span className="text-yellow-300">TR∆Ø·ªúNG S·∫†CH</span>
              </h1>
              <p className="text-xl lg:text-2xl mb-8 text-green-100">
                "T√¥i mu·ªën c√≥ nh√† v·ªá sinh s·∫°ch ƒë·ªÉ h·ªçc sinh s·ª≠ d·ª•ng khi ƒë·∫øn tr∆∞·ªùng"
              </p>
              <p className="text-lg mb-8 text-green-100">
                K·∫øt n·ªëi c√°c ngu·ªìn l·ª±c x√£ h·ªôi ƒë·ªÉ h·ªçc sinh c√≥ nh√† v·ªá sinh s·∫°ch ƒë·ªÉ s·ª≠ d·ª•ng khi ƒë·∫øn tr∆∞·ªùng
              </p>
              <div className="flex flex-col sm:flex-row gap-4">
                <LoadingLink href="/truong-sach" className="bg-yellow-400 hover:bg-yellow-500 text-green-900 font-bold px-8 py-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl text-center">
                  ƒêƒÉng k√Ω tr∆∞·ªùng h·ªçc
                </LoadingLink>
                <LoadingLink href="/lien-he" className="border-2 border-white text-white hover:bg-white hover:text-green-700 font-semibold px-8 py-4 rounded-lg transition-all duration-200 text-center">
                  Li√™n h·ªá ngay
                </LoadingLink>
              </div>
            </div>
            
            {/* YouTube Video */}
            <div className="bg-white rounded-xl shadow-2xl p-8">
              <div className="aspect-video rounded-lg overflow-hidden mb-6">
                <iframe
                  width="100%"
                  height="100%"
                  src="https://www.youtube.com/embed/yKNzPTOC1jE"
                  title="Video INTRO gi·ªõi thi·ªáu Ch∆∞∆°ng tr√¨nh TR∆Ø·ªúNG S·∫†CH"
                  frameBorder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                  allowFullScreen
                  className="w-full h-full"
                ></iframe>
              </div>
              <div className="text-center">
                <h3 className="text-xl font-semibold text-gray-900 mb-2">Video INTRO gi·ªõi thi·ªáu Ch∆∞∆°ng tr√¨nh TR∆Ø·ªúNG S·∫†CH</h3>
                <p className="text-green-600 text-sm">
                  T√¨m hi·ªÉu v·ªÅ s·ª© m·ªánh v√† ho·∫°t ƒë·ªông c·ªßa Con Voi trong vi·ªác c·∫£i thi·ªán m√¥i tr∆∞·ªùng gi√°o d·ª•c
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>
 
      {/* Projects Section */}
      <ProjectsSection />

      {/* Banner Section 2 - Happy Market */}
      <section className="section-padding bg-gradient-to-br from-yellow-50 to-orange-50">
        <div className="container-padding">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div className="order-2 lg:order-1">
              <div className="bg-white rounded-xl shadow-lg p-8">
                <div className="aspect-video bg-gradient-to-br from-yellow-100 to-orange-100 rounded-lg flex items-center justify-center">
                  <div className="text-center">
                    <svg className="mx-auto h-16 w-16 text-orange-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                    </svg>
                    <p className="text-orange-700 font-semibold">Happy Market</p>
                  </div>
                </div>
              </div>
            </div>
            <div className="order-1 lg:order-2">
              <h2 className="text-4xl font-bold text-gray-900 mb-6">
                HAPPY MARKET
              </h2>
              <p className="text-lg text-gray-700 mb-8">
                Nh√† t√†i tr·ª£ chi·∫øn l∆∞·ª£c cho Ch∆∞∆°ng tr√¨nh TR∆Ø·ªúNG S·∫†CH. 
                M·ªói l·∫ßn mua s·∫Øm tr√™n Happy Market, b·∫°n ƒë√£ g√≥p ph·∫ßn gi√∫p c√°c em h·ªçc sinh c√≥ nh√† v·ªá sinh s·∫°ch h∆°n.
              </p>
              <LoadingLink href="/happy-market" className="bg-orange-600 hover:bg-orange-700 text-white font-semibold px-8 py-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl inline-block">
                Mua s·∫Øm trong h·∫°nh ph√∫c
              </LoadingLink>
            </div>
          </div>
        </div>
      </section>

      {/* Banner Section 3 - SOTUTE */}
      <section className="section-padding bg-gradient-to-br from-purple-50 to-indigo-50">
        <div className="container-padding">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div>
              <h2 className="text-4xl font-bold text-gray-900 mb-6">
                SOTUTE
              </h2>
              <p className="text-lg text-gray-700 mb-8">
                N·ªÅn t·∫£ng quy√™n g√≥p tr·ª±c tuy·∫øn h·ªó tr·ª£ h·ªçc sinh. 
                Ch√∫ng t√¥i gi√∫p bi·∫øn ∆∞·ªõc m∆° c·ªßa c√°c em c√≥ nh√† v·ªá sinh s·∫°ch th√†nh hi·ªán th·ª±c.
              </p>
              <a href="#" className="bg-purple-600 hover:bg-purple-700 text-white font-semibold px-8 py-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl inline-block">
                Bi·∫øn ∆∞·ªõc m∆° th√†nh hi·ªán th·ª±c
              </a>
            </div>
            <div className="relative">
              <div className="bg-white rounded-xl shadow-lg p-8">
                <div className="aspect-video bg-gradient-to-br from-purple-100 to-indigo-100 rounded-lg flex items-center justify-center">
                  <div className="text-center">
                    <svg className="mx-auto h-16 w-16 text-purple-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                    <p className="text-purple-700 font-semibold">SOTUTE Platform</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="section-padding bg-green-700">
        <div className="container-padding">
          <div className="text-center mb-12">
            <h2 className="text-3xl lg:text-4xl font-bold text-white mb-4">
              Th√†nh t·ª±u c·ªßa ch√∫ng t√¥i
            </h2>
            <p className="text-xl text-green-100">
              Nh·ªØng con s·ªë ·∫•n t∆∞·ª£ng v·ªÅ ch∆∞∆°ng tr√¨nh TR∆Ø·ªúNG S·∫†CH
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              { number: '150+', label: 'Tr∆∞·ªùng h·ªçc tham gia', icon: 'üè´' },
              { number: '50,000+', label: 'H·ªçc sinh ƒë∆∞·ª£c h·ªó tr·ª£', icon: 'üë®‚Äçüéì' },
              { number: '200+', label: 'Nh√† v·ªá sinh ƒë∆∞·ª£c c·∫£i t·∫°o', icon: 'üöΩ' },
              { number: '5,000+', label: 'Ng∆∞·ªùi quy√™n g√≥p', icon: '‚ù§Ô∏è' },
            ].map((stat, index) => (
              <div key={index} className="text-center">
                <div className="text-4xl mb-4">{stat.icon}</div>
                <div className="text-3xl lg:text-4xl font-bold text-white mb-2">{stat.number}</div>
                <div className="text-green-100">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="section-padding bg-gradient-to-r from-green-600 to-green-700">
        <div className="container-padding text-center">
          <h2 className="text-3xl lg:text-4xl font-bold text-white mb-6">
            H√£y c√πng ch√∫ng t√¥i t·∫°o n√™n s·ª± thay ƒë·ªïi
          </h2>
          <p className="text-xl text-green-100 mb-8 max-w-3xl mx-auto">
            M·ªói ƒë√≥ng g√≥p c·ªßa b·∫°n ƒë·ªÅu c√≥ √Ω nghƒ©a to l·ªõn trong vi·ªác mang ƒë·∫øn m√¥i tr∆∞·ªùng h·ªçc t·∫≠p t·ªët h∆°n cho c√°c em h·ªçc sinh.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <LoadingLink href="/truong-sach" className="bg-white text-green-700 hover:bg-gray-100 font-bold px-8 py-4 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl">
              ƒêƒÉng k√Ω tr∆∞·ªùng h·ªçc
            </LoadingLink>
            <LoadingLink href="/lien-he" className="border-2 border-white text-white hover:bg-white hover:text-green-700 font-semibold px-8 py-4 rounded-lg transition-all duration-200">
              Li√™n h·ªá h·ªó tr·ª£
            </LoadingLink>
          </div>
        </div>
      </section>

      <Footer />
    </>
  );
}

// Component hi·ªÉn th·ªã c√°c d·ª± √°n
function ProjectsSection() {
  const { projects, loading, error } = useSotuteData();

  if (loading) {
    return (
      <section className="section-padding bg-gray-50">
        <div className="container-padding">
          <div className="text-center mb-12">
            <h2 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
              T√¨nh tr·∫°ng c√°c d·ª± √°n th·ª±c t·∫ø
            </h2>
            <p className="text-xl text-gray-600">
              D·ªØ li·ªáu tr·ª±c ti·∫øp t·ª´ n·ªÅn t·∫£ng SOTUTE
            </p>
          </div>
          
          {/* Loading skeleton */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[1, 2, 3, 4, 5, 6].map((i) => (
              <div key={i} className="bg-white rounded-xl p-6 shadow-sm animate-pulse">
                <div className="h-48 bg-gray-200 rounded-lg mb-4"></div>
                <div className="h-4 bg-gray-200 rounded mb-2"></div>
                <div className="h-4 bg-gray-200 rounded mb-4 w-3/4"></div>
                <div className="h-2 bg-gray-200 rounded mb-4"></div>
                <div className="flex gap-2">
                  <div className="h-10 bg-gray-200 rounded flex-1"></div>
                  <div className="h-10 bg-gray-200 rounded w-20"></div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    );
  }

  if (error) {
    return (
      <section className="section-padding bg-gray-50">
        <div className="container-padding">
          <div className="text-center">
            <div className="text-6xl mb-4">‚ö†Ô∏è</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi SOTUTE
            </h3>
            <p className="text-gray-600 mb-6">
              H·ªá th·ªëng ƒëang g·∫∑p s·ª± c·ªë k·∫øt n·ªëi. Vui l√≤ng th·ª≠ l·∫°i sau.
            </p>
            <button 
              onClick={() => window.location.reload()}
              className="bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg transition-colors duration-200"
            >
              Th·ª≠ l·∫°i
            </button>
          </div>
        </div>
      </section>
    );
  }

  if (projects.length === 0) {
    return (
      <section className="section-padding bg-gray-50">
        <div className="container-padding">
          <div className="text-center">
            <div className="text-6xl mb-4">üìã</div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">
              Ch∆∞a c√≥ d·ªØ li·ªáu d·ª± √°n
            </h3>
            <p className="text-gray-600 mb-6">
              H·ªá th·ªëng ƒëang c·∫≠p nh·∫≠t d·ªØ li·ªáu t·ª´ SOTUTE, vui l√≤ng th·ª≠ l·∫°i sau.
            </p>
            <button 
              onClick={() => window.location.reload()}
              className="bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg transition-colors duration-200"
            >
              T·∫£i l·∫°i
            </button>
          </div>
        </div>
      </section>
    );
  }

  const activeProjects = projects.filter(p => p.status === 'active');
  const pendingProjects = projects.filter(p => p.status === 'pending');
  const completedProjects = projects.filter(p => p.status === 'completed');

  return (
    <section className="section-padding bg-gray-50">
      <div className="container-padding">
        <div className="text-center mb-12">
          <h2 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-4">
            T√¨nh tr·∫°ng c√°c d·ª± √°n th·ª±c t·∫ø
          </h2>
          <p className="text-xl text-gray-600 mb-6">
            D·ªØ li·ªáu tr·ª±c ti·∫øp t·ª´ n·ªÅn t·∫£ng SOTUTE
          </p>
          
          {/* Summary stats */}
          <div className="flex justify-center gap-8 text-sm">
            <div className="flex items-center gap-2">
              <div className="w-3 h-3 bg-green-500 rounded-full"></div>
              <span>{activeProjects.length} ƒêang th·ª±c hi·ªán</span>
            </div>
            <div className="flex items-center gap-2">
              <div className="w-3 h-3 bg-orange-500 rounded-full"></div>
              <span>{pendingProjects.length} V·∫≠n ƒë·ªông kinh ph√≠</span>
            </div>
            <div className="flex items-center gap-2">
              <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
              <span>{completedProjects.length} ƒê√£ ho√†n th√†nh</span>
            </div>
          </div>
        </div>

        {/* Hi·ªÉn th·ªã t·∫•t c·∫£ d·ª± √°n d·∫°ng grid cards */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projects.map((project) => (
            <ProjectCard key={project.id} project={project} />
          ))}
        </div>

        {/* Call to action */}
        <div className="mt-16 text-center">
          <div className="bg-gradient-to-r from-green-100 to-blue-100 rounded-2xl p-8">
            <h3 className="text-2xl font-bold text-gray-900 mb-4">
              B·∫°n mu·ªën ƒëƒÉng k√Ω tr∆∞·ªùng h·ªçc tham gia?
            </h3>
            <p className="text-gray-700 mb-6 max-w-2xl mx-auto">
              Ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ tr∆∞·ªùng h·ªçc c·ªßa b·∫°n x√¢y d·ª±ng nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh. 
              H√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <LoadingLink 
                href="/truong-sach" 
                className="bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl inline-flex items-center gap-2"
              >
                <span>üìù</span>
                <span>ƒêƒÉng k√Ω tr∆∞·ªùng h·ªçc</span>
              </LoadingLink>
              <LoadingLink 
                href="/lien-he" 
                className="border-2 border-green-600 text-green-600 hover:bg-green-600 hover:text-white px-8 py-3 rounded-lg transition-all duration-200 inline-flex items-center gap-2"
              >
                <span>üìû</span>
                <span>Li√™n h·ªá t∆∞ v·∫•n</span>
              </LoadingLink>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
