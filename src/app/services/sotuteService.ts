export interface SotuteProject {
  id: string;
  title: string;
  description: string;
  school_name: string;
  location: string;
  target_amount: number;
  raised_amount: number;
  progress_percentage: number;
  status: 'active' | 'completed' | 'pending';
  image_url?: string;
  created_at: string;
  updated_at: string;
}

export interface SotuteApiResponse {
  success: boolean;
  data: SotuteProject[];
  total: number;
  page: number;
  limit: number;
}

class SotuteService {
  private baseUrl = 'https://sotute.com';
  private apiEndpoint = '/api/projects'; // Endpoint gi·∫£ ƒë·ªãnh
  private cache: SotuteProject[] = [];
  private lastFetch: number = 0;
  private cacheExpiry = 5 * 60 * 1000; // 5 ph√∫t cache
  private intervalId: NodeJS.Timeout | null = null;
  private listeners: ((projects: SotuteProject[]) => void)[] = [];

  constructor() {
    // Kh·ªüi t·∫°o job ch·∫°y ng·∫ßm
    this.startBackgroundJob();
  }

  // B·∫Øt ƒë·∫ßu job ch·∫°y ng·∫ßm
  startBackgroundJob() {
    // Fetch ngay l·∫≠p t·ª©c
    this.fetchProjects();
    
    // Sau ƒë√≥ fetch m·ªói 5 ph√∫t
    this.intervalId = setInterval(() => {
      this.fetchProjects();
    }, this.cacheExpiry);
  }

  // D·ª´ng job ch·∫°y ng·∫ßm
  stopBackgroundJob() {
    if (this.intervalId) {
      clearInterval(this.intervalId);
      this.intervalId = null;
    }
  }

  // ƒêƒÉng k√Ω listener ƒë·ªÉ nh·∫≠n th√¥ng b√°o khi c√≥ d·ªØ li·ªáu m·ªõi
  subscribe(callback: (projects: SotuteProject[]) => void) {
    this.listeners.push(callback);
    // G·ªçi callback ngay v·ªõi d·ªØ li·ªáu hi·ªán t·∫°i n·∫øu c√≥
    if (this.cache.length > 0) {
      callback(this.cache);
    }
    
    // Tr·∫£ v·ªÅ function ƒë·ªÉ unsubscribe
    return () => {
      const index = this.listeners.indexOf(callback);
      if (index > -1) {
        this.listeners.splice(index, 1);
      }
    };
  }

  // Th√¥ng b√°o cho t·∫•t c·∫£ listeners
  private notifyListeners(projects: SotuteProject[]) {
    this.listeners.forEach(callback => callback(projects));
  }

  // Fetch d·ªØ li·ªáu t·ª´ sotute.com
  async fetchProjects(): Promise<SotuteProject[]> {
    try {
      console.log('üîÑ ƒêang l·∫•y d·ªØ li·ªáu t·ª´ sotute.com...');
      
      // Th·ª≠ fetch t·ª´ API th·ª±c
      const response = await fetch(`${this.baseUrl}${this.apiEndpoint}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const data: SotuteApiResponse = await response.json();
        this.cache = data.data;
        this.lastFetch = Date.now();
        console.log(`‚úÖ ƒê√£ l·∫•y ${data.data.length} d·ª± √°n t·ª´ sotute.com`);
        this.notifyListeners(this.cache);
        return this.cache;
      } else {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ sotute.com, s·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u:', error);
      
      // S·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u khi kh√¥ng th·ªÉ fetch t·ª´ API
      const mockData = this.getMockData();
      this.cache = mockData;
      this.lastFetch = Date.now();
      this.notifyListeners(this.cache);
      return this.cache;
    }
  }

  // L·∫•y d·ªØ li·ªáu t·ª´ cache ho·∫∑c fetch m·ªõi
  async getProjects(forceRefresh = false): Promise<SotuteProject[]> {
    const now = Date.now();
    const isCacheValid = (now - this.lastFetch) < this.cacheExpiry;

    if (!forceRefresh && this.cache.length > 0 && isCacheValid) {
      console.log('üìã S·ª≠ d·ª•ng d·ªØ li·ªáu t·ª´ cache');
      return this.cache;
    }

    return await this.fetchProjects();
  }

  // L·∫•y d·ª± √°n theo tr·∫°ng th√°i
  getProjectsByStatus(status: SotuteProject['status']): SotuteProject[] {
    return this.cache.filter(project => project.status === status);
  }

  // L·∫•y d·ª± √°n ƒëang th·ª±c hi·ªán
  getActiveProjects(): SotuteProject[] {
    return this.getProjectsByStatus('active');
  }

  // L·∫•y d·ª± √°n ƒëang v·∫≠n ƒë·ªông kinh ph√≠
  getPendingProjects(): SotuteProject[] {
    return this.getProjectsByStatus('pending');
  }

  // L·∫•y d·ª± √°n ƒë√£ ho√†n th√†nh
  getCompletedProjects(): SotuteProject[] {
    return this.getProjectsByStatus('completed');
  }

  // D·ªØ li·ªáu m·∫´u khi kh√¥ng th·ªÉ fetch t·ª´ API
  private getMockData(): SotuteProject[] {
    return [
      {
        id: 'TS0006',
        title: 'Nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh Tr∆∞·ªùng THPT Tr·∫ßn H∆∞ng ƒê·∫°o',
        description: 'C·∫£i t·∫°o h·ªá th·ªëng nh√† v·ªá sinh c≈© k·ªπ, kh√¥ng ƒë·∫£m b·∫£o v·ªá sinh cho h·ªçc sinh',
        school_name: 'THPT Tr·∫ßn H∆∞ng ƒê·∫°o',
        location: 'TP.HCM',
        target_amount: 62850000,
        raised_amount: 62000,
        progress_percentage: 0.1,
        status: 'pending',
        image_url: '/images/truong-hung-dao.jpg',
        created_at: '2024-01-15T00:00:00Z',
        updated_at: new Date().toISOString(),
      },
      {
        id: 'TS0003',
        title: 'Nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh Tr∆∞·ªùng TH H∆∞ng M·ªπ A',
        description: 'X√¢y d·ª±ng nh√† v·ªá sinh m·ªõi ƒë·ªÉ thay th·∫ø h·ªá th·ªëng c≈© kh√¥ng c√≤n s·ª≠ d·ª•ng ƒë∆∞·ª£c',
        school_name: 'TH H∆∞ng M·ªπ A',
        location: 'Tr√† Vinh',
        target_amount: 58850000,
        raised_amount: 222000,
        progress_percentage: 0.38,
        status: 'pending',
        image_url: '/images/truong-hung-my-a.jpg',
        created_at: '2024-01-10T00:00:00Z',
        updated_at: new Date().toISOString(),
      },
      {
        id: 'TS0005',
        title: 'Nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh Tr∆∞·ªùng THPT Ti·ªÉu C·∫ßn',
        description: 'C·∫£i t·∫°o v√† n√¢ng c·∫•p nh√† v·ªá sinh ƒë·ªÉ ph·ª•c v·ª• t·ªët h∆°n cho h·ªçc sinh',
        school_name: 'THPT Ti·ªÉu C·∫ßn',
        location: 'Tr√† Vinh',
        target_amount: 58850000,
        raised_amount: 27650000,
        progress_percentage: 46.98,
        status: 'active',
        image_url: '/images/truong-tieu-can.jpg',
        created_at: '2024-01-20T00:00:00Z',
        updated_at: new Date().toISOString(),
      },
      {
        id: 'TS0001',
        title: 'Nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh Tr∆∞·ªùng THPT Nguy·ªÖn Tr√£i',
        description: 'D·ª± √°n ƒë·∫ßu ti√™n c·ªßa ch∆∞∆°ng tr√¨nh Tr∆∞·ªùng S·∫°ch - ƒë√£ ho√†n th√†nh xu·∫•t s·∫Øc',
        school_name: 'THPT Nguy·ªÖn Tr√£i',
        location: 'H√† N·ªôi',
        target_amount: 75000000,
        raised_amount: 75000000,
        progress_percentage: 100,
        status: 'completed',
        image_url: '/images/truong-nguyen-trai.jpg',
        created_at: '2023-12-01T00:00:00Z',
        updated_at: new Date().toISOString(),
      },
      {
        id: 'TS0002',
        title: 'Nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh Tr∆∞·ªùng THCS L√™ Qu√Ω ƒê√¥n',
        description: 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng nh√† v·ªá sinh hi·ªán ƒë·∫°i, th√¢n thi·ªán v·ªõi m√¥i tr∆∞·ªùng',
        school_name: 'THCS L√™ Qu√Ω ƒê√¥n',
        location: 'TP.HCM',
        target_amount: 65000000,
        raised_amount: 45500000,
        progress_percentage: 70,
        status: 'active',
        image_url: '/images/truong-le-quy-don.jpg',
        created_at: '2023-12-15T00:00:00Z',
        updated_at: new Date().toISOString(),
      },
      {
        id: 'TS0004',
        title: 'Nh√† v·ªá sinh s·∫°ch cho h·ªçc sinh Tr∆∞·ªùng THPT Y√™n B√°i',
        description: 'C·∫£i thi·ªán ƒëi·ªÅu ki·ªán v·ªá sinh cho h·ªçc sinh v√πng cao',
        school_name: 'THPT Y√™n B√°i',
        location: 'Y√™n B√°i',
        target_amount: 80000000,
        raised_amount: 48000000,
        progress_percentage: 60,
        status: 'active',
        image_url: '/images/truong-yen-bai.jpg',
        created_at: '2024-01-05T00:00:00Z',
        updated_at: new Date().toISOString(),
      },
    ];
  }

  // Format s·ªë ti·ªÅn
  formatCurrency(amount: number): string {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(amount).replace('‚Ç´', 'ƒë');
  }

  // Cleanup khi component unmount
  destroy() {
    this.stopBackgroundJob();
    this.listeners = [];
  }
}

// T·∫°o instance singleton
export const sotuteService = new SotuteService();

// Export default
export default sotuteService; 